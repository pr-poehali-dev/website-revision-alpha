import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface User {
  id: number;
  email: string;
  full_name: string;
  balance: number;
  referral_count: number;
}

const API_URL = 'https://functions.poehali.dev/10776416-1fff-46a0-901e-fa68b4a5f3dd';

export default function Index() {
  const [view, setView] = useState<'home' | 'register' | 'login' | 'dashboard'>('home');
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(false);
  const { toast } = useToast();

  const [registerForm, setRegisterForm] = useState({
    email: '',
    password: '',
    full_name: ''
  });

  const [loginForm, setLoginForm] = useState({
    email: '',
    password: ''
  });

  useEffect(() => {
    const savedUser = localStorage.getItem('user');
    if (savedUser) {
      setUser(JSON.parse(savedUser));
      setView('dashboard');
    }
  }, []);

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'register',
          ...registerForm
        })
      });

      const data = await response.json();

      if (data.success) {
        setUser(data.user);
        localStorage.setItem('user', JSON.stringify(data.user));
        setView('dashboard');
        toast({
          title: '‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!',
          description: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É!'
        });
      } else {
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: data.error,
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'login',
          ...loginForm
        })
      });

      const data = await response.json();

      if (data.success) {
        setUser(data.user);
        localStorage.setItem('user', JSON.stringify(data.user));
        setView('dashboard');
        toast({
          title: '‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!',
          description: `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${data.user.full_name}!`
        });
      } else {
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: data.error,
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    setUser(null);
    localStorage.removeItem('user');
    setView('home');
    toast({
      title: 'üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!',
      description: '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'
    });
  };

  if (view === 'home') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50">
        <div className="container mx-auto px-4 py-8">
          <header className="text-center mb-12 animate-fade-in">
            <div className="flex items-center justify-center gap-3 mb-4">
              <Icon name="Sparkles" size={48} className="text-primary" />
              <h1 className="text-5xl md:text-6xl font-bold text-primary">
                –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç–∞
              </h1>
            </div>
            <p className="text-xl text-muted-foreground">
              –ü–æ–ª—É—á–∏—Ç–µ 1000‚ÇΩ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã! üéâ
            </p>
          </header>

          <div className="max-w-4xl mx-auto space-y-8">
            <Card className="bg-gradient-to-br from-primary to-red-700 text-white border-0 shadow-2xl animate-slide-up">
              <CardHeader className="text-center">
                <CardTitle className="text-4xl font-bold mb-2">
                  üåü –û—Ç–ª–∏—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å! üåü
                </CardTitle>
                <CardDescription className="text-white/90 text-lg">
                  –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å 500‚ÇΩ –æ—Ç –Ω–∞—Å –∏ –µ—â–µ 500‚ÇΩ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞!
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 space-y-4">
                  <h3 className="text-2xl font-bold">–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</h3>
                  <div className="space-y-3">
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        1
                      </div>
                      <p className="text-lg">
                        –û—Ñ–æ—Ä–º–∏—Ç—å –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É –ø–æ —Å—Å—ã–ª–∫–µ:{' '}
                        <a 
                          href="https://alfa.me/ASQWHN" 
                          target="_blank" 
                          rel="noopener noreferrer"
                          className="underline font-semibold hover:text-secondary transition-colors"
                        >
                          alfa.me/ASQWHN
                        </a>
                      </p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        2
                      </div>
                      <p className="text-lg">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        3
                      </div>
                      <p className="text-lg">
                        –°–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É –æ—Ç 200‚ÇΩ. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –≤ Telegram:{' '}
                        <a 
                          href="https://t.me/Alfa_Bank778" 
                          target="_blank" 
                          rel="noopener noreferrer"
                          className="underline font-semibold hover:text-secondary transition-colors"
                        >
                          @Alfa_Bank778
                        </a>
                        {' '}–¥–ª—è –≤—ã–ø–ª–∞—Ç—ã 500‚ÇΩ
                      </p>
                    </div>
                  </div>
                </div>

                <div className="bg-secondary/20 backdrop-blur-sm rounded-lg p-6">
                  <div className="flex items-center gap-3 mb-3">
                    <Icon name="Heart" size={32} className="text-secondary" />
                    <h3 className="text-2xl font-bold">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–∞—Ä—Ç—ã</h3>
                  </div>
                  <ul className="space-y-2 text-lg">
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={20} className="text-secondary" />
                      –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={20} className="text-secondary" />
                      –ö—ç—à–±—ç–∫ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü
                    </li>
                    <li className="flex items-center gap-2">
                      <Icon name="Check" size={20} className="text-secondary" />
                      –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤
                    </li>
                  </ul>
                </div>
              </CardContent>
            </Card>

            <div className="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in">
              <Button
                size="lg"
                className="text-lg font-semibold h-14 shadow-lg hover:shadow-xl transition-all"
                onClick={() => setView('register')}
              >
                <Icon name="UserPlus" size={24} className="mr-2" />
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="text-lg font-semibold h-14 shadow-lg hover:shadow-xl transition-all border-2 border-primary"
                onClick={() => setView('login')}
              >
                <Icon name="LogIn" size={24} className="mr-2" />
                –í–æ–π—Ç–∏
              </Button>
            </div>

            <Card className="animate-fade-in">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="MessageCircle" size={28} className="text-primary" />
                  –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-lg">
                  –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ Telegram:{' '}
                  <a 
                    href="https://t.me/Alfa_Bank778" 
                    target="_blank" 
                    rel="noopener noreferrer"
                    className="text-primary hover:underline font-semibold"
                  >
                    @Alfa_Bank778
                  </a>
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    );
  }

  if (view === 'register') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-2xl animate-fade-in">
          <CardHeader>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setView('home')}
              className="w-fit mb-4"
            >
              <Icon name="ArrowLeft" size={20} className="mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            <CardTitle className="text-3xl flex items-center gap-2">
              <Icon name="UserPlus" size={32} className="text-primary" />
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </CardTitle>
            <CardDescription>–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ</CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleRegister} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="full_name">–ü–æ–ª–Ω–æ–µ –∏–º—è</Label>
                <Input
                  id="full_name"
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  value={registerForm.full_name}
                  onChange={(e) => setRegisterForm({ ...registerForm, full_name: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="ivan@example.com"
                  value={registerForm.email}
                  onChange={(e) => setRegisterForm({ ...registerForm, email: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="password"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  value={registerForm.password}
                  onChange={(e) => setRegisterForm({ ...registerForm, password: e.target.value })}
                  required
                />
              </div>
              <Button type="submit" className="w-full" disabled={loading}>
                {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
              </Button>
            </form>
            <Separator className="my-4" />
            <p className="text-center text-sm text-muted-foreground">
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
              <button
                onClick={() => setView('login')}
                className="text-primary hover:underline font-semibold"
              >
                –í–æ–π—Ç–∏
              </button>
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (view === 'login') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-2xl animate-fade-in">
          <CardHeader>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setView('home')}
              className="w-fit mb-4"
            >
              <Icon name="ArrowLeft" size={20} className="mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            <CardTitle className="text-3xl flex items-center gap-2">
              <Icon name="LogIn" size={32} className="text-primary" />
              –í—Ö–æ–¥
            </CardTitle>
            <CardDescription>–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleLogin} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="login-email">Email</Label>
                <Input
                  id="login-email"
                  type="email"
                  placeholder="ivan@example.com"
                  value={loginForm.email}
                  onChange={(e) => setLoginForm({ ...loginForm, email: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="login-password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="login-password"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  value={loginForm.password}
                  onChange={(e) => setLoginForm({ ...loginForm, password: e.target.value })}
                  required
                />
              </div>
              <Button type="submit" className="w-full" disabled={loading}>
                {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
              </Button>
            </form>
            <Separator className="my-4" />
            <p className="text-center text-sm text-muted-foreground">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
              <button
                onClick={() => setView('register')}
                className="text-primary hover:underline font-semibold"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (view === 'dashboard' && user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50">
        <div className="container mx-auto px-4 py-8">
          <header className="flex justify-between items-center mb-8 animate-fade-in">
            <div>
              <h1 className="text-4xl font-bold text-primary mb-1">
                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
              </h1>
              <p className="text-muted-foreground">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.full_name}!
              </p>
            </div>
            <Button variant="outline" onClick={handleLogout}>
              <Icon name="LogOut" size={20} className="mr-2" />
              –í—ã–π—Ç–∏
            </Button>
          </header>

          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <Card className="bg-gradient-to-br from-primary to-red-700 text-white border-0 shadow-xl animate-slide-up">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="Wallet" size={28} />
                  –í–∞—à –±–∞–ª–∞–Ω—Å
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-5xl font-bold">{user.balance.toFixed(2)} ‚ÇΩ</p>
                <p className="text-white/80 mt-2">
                  –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤
                </p>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-secondary to-yellow-600 text-white border-0 shadow-xl animate-slide-up" style={{ animationDelay: '0.1s' }}>
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="Users" size={28} />
                  –†–µ—Ñ–µ—Ä–∞–ª—ã
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-5xl font-bold">{user.referral_count}</p>
                <p className="text-white/80 mt-2">
                  –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                </p>
              </CardContent>
            </Card>
          </div>

          <Card className="mb-8 animate-fade-in">
            <CardHeader>
              <CardTitle className="text-2xl flex items-center gap-2">
                <Icon name="List" size={28} className="text-primary" />
                –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –±–æ–Ω—É—Å–æ–≤
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex items-start gap-4 p-4 bg-muted rounded-lg">
                <div className="w-10 h-10 rounded-full bg-primary text-white flex items-center justify-center font-bold flex-shrink-0">
                  1
                </div>
                <div>
                  <h3 className="font-semibold text-lg mb-1">–û—Ñ–æ—Ä–º–∏—Ç–µ –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É</h3>
                  <p className="text-muted-foreground">
                    –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ{' '}
                    <a 
                      href="https://alfa.me/ASQWHN" 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-primary hover:underline font-semibold"
                    >
                      alfa.me/ASQWHN
                    </a>
                    {' '}–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-4 p-4 bg-muted rounded-lg">
                <div className="w-10 h-10 rounded-full bg-primary text-white flex items-center justify-center font-bold flex-shrink-0">
                  2
                </div>
                <div>
                  <h3 className="font-semibold text-lg mb-1">–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∫–∞—Ä—Ç—É</h3>
                  <p className="text-muted-foreground">
                    –ü–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ—ë –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-4 p-4 bg-muted rounded-lg">
                <div className="w-10 h-10 rounded-full bg-primary text-white flex items-center justify-center font-bold flex-shrink-0">
                  3
                </div>
                <div>
                  <h3 className="font-semibold text-lg mb-1">–°–æ–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É</h3>
                  <p className="text-muted-foreground">
                    –û–ø–ª–∞—Ç–∏—Ç–µ –∫–∞—Ä—Ç–æ–π –ø–æ–∫—É–ø–∫—É –Ω–∞ —Å—É–º–º—É –æ—Ç 200‚ÇΩ
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-4 p-4 bg-muted rounded-lg">
                <div className="w-10 h-10 rounded-full bg-primary text-white flex items-center justify-center font-bold flex-shrink-0">
                  4
                </div>
                <div>
                  <h3 className="font-semibold text-lg mb-1">–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫</h3>
                  <p className="text-muted-foreground">
                    –ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –≤ Telegram{' '}
                    <a 
                      href="https://t.me/Alfa_Bank778" 
                      target="_blank" 
                      rel="noopener noreferrer"
                      className="text-primary hover:underline font-semibold"
                    >
                      @Alfa_Bank778
                    </a>
                    {' '}–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è 500‚ÇΩ
                  </p>
                </div>
              </div>

              <div className="flex items-start gap-4 p-4 bg-secondary/20 rounded-lg border-2 border-secondary">
                <Icon name="Sparkles" size={40} className="text-secondary flex-shrink-0" />
                <div>
                  <h3 className="font-semibold text-lg mb-1">–ü–æ–ª—É—á–∏—Ç–µ 1000‚ÇΩ!</h3>
                  <p className="text-muted-foreground">
                    500‚ÇΩ –æ—Ç –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫–∞ + 500‚ÇΩ –æ—Ç –Ω–∞—Å = 1000‚ÇΩ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É!
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="animate-fade-in">
            <CardHeader>
              <CardTitle className="text-2xl flex items-center gap-2">
                <Icon name="MessageCircle" size={28} className="text-primary" />
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-lg mb-4">
                –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:
              </p>
              <Button asChild size="lg">
                <a 
                  href="https://t.me/Alfa_Bank778" 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="flex items-center gap-2"
                >
                  <Icon name="Send" size={20} />
                  –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
                </a>
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return null;
}
