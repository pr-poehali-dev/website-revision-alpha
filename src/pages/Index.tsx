import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Separator } from '@/components/ui/separator';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

interface User {
  id: number;
  email: string;
  full_name: string;
  balance: number;
  referral_count: number;
  referral_code: string;
}

const API_URL = 'https://functions.poehali.dev/10776416-1fff-46a0-901e-fa68b4a5f3dd';
const WITHDRAW_URL = 'https://functions.poehali.dev/23574f4f-8044-4097-91c7-8d6624ddf319';

export default function Index() {
  const [view, setView] = useState<'home' | 'register' | 'login' | 'dashboard'>('home');
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(false);
  const [withdrawAmount, setWithdrawAmount] = useState('');
  const [paymentDetails, setPaymentDetails] = useState('');
  const { toast } = useToast();

  const [registerForm, setRegisterForm] = useState({
    email: '',
    password: '',
    full_name: ''
  });

  const [loginForm, setLoginForm] = useState({
    email: '',
    password: ''
  });

  useEffect(() => {
    const savedUser = localStorage.getItem('user');
    if (savedUser) {
      setUser(JSON.parse(savedUser));
      setView('dashboard');
    }
  }, []);

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'register',
          ...registerForm
        })
      });

      const data = await response.json();

      if (data.success) {
        setUser(data.user);
        localStorage.setItem('user', JSON.stringify(data.user));
        setView('dashboard');
        toast({
          title: '‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!',
          description: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É!'
        });
      } else {
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: data.error,
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      const response = await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'login',
          ...loginForm
        })
      });

      const data = await response.json();

      if (data.success) {
        setUser(data.user);
        localStorage.setItem('user', JSON.stringify(data.user));
        setView('dashboard');
        toast({
          title: '‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!',
          description: `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${data.user.full_name}!`
        });
      } else {
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: data.error,
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const handleWithdraw = async () => {
    if (!user) return;

    const amount = parseFloat(withdrawAmount);
    if (isNaN(amount) || amount < 100) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 100‚ÇΩ',
        variant: 'destructive'
      });
      return;
    }

    if (!paymentDetails) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞',
        variant: 'destructive'
      });
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(WITHDRAW_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          user_id: user.id,
          amount: amount,
          payment_method: 'card',
          payment_details: paymentDetails
        })
      });

      const data = await response.json();

      if (data.success) {
        toast({
          title: '‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!',
          description: '–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤'
        });
        setWithdrawAmount('');
        setPaymentDetails('');
      } else {
        toast({
          title: '‚ùå –û—à–∏–±–∫–∞',
          description: data.error,
          variant: 'destructive'
        });
      }
    } catch (error) {
      toast({
        title: '‚ùå –û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É',
        variant: 'destructive'
      });
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    setUser(null);
    localStorage.removeItem('user');
    setView('home');
    toast({
      title: 'üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!',
      description: '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'
    });
  };

  const copyReferralLink = () => {
    if (!user) return;
    const link = `${window.location.origin}?ref=${user.referral_code}`;
    navigator.clipboard.writeText(link);
    toast({
      title: '‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!',
      description: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞'
    });
  };

  if (view === 'home') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50">
        <div className="container mx-auto px-4 py-8">
          <header className="text-center mb-12 animate-fade-in">
            <div className="flex items-center justify-center gap-3 mb-4">
              <Icon name="Sparkles" size={48} className="text-primary" />
              <h1 className="text-5xl md:text-6xl font-bold text-primary">
                –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç–∞
              </h1>
            </div>
            <p className="text-xl text-muted-foreground">
              –ó–∞—Ä–∞–±–æ—Ç–∞–π –¥–æ 1000‚ÇΩ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã! üéâ
            </p>
          </header>

          <div className="max-w-4xl mx-auto space-y-8">
            <Card className="bg-gradient-to-br from-primary to-red-700 text-white border-0 shadow-2xl animate-slide-up">
              <CardHeader className="text-center">
                <CardTitle className="text-4xl font-bold mb-2">
                  üåü –ó–∞—Ä–∞–±–æ—Ç–∞–π –¥–µ–Ω—å–≥–∏! üåü
                </CardTitle>
                <CardDescription className="text-white/90 text-lg">
                  –ü–æ–ª—É—á–∏ –¥–æ 1000‚ÇΩ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—ã –∏ –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π!
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 space-y-4">
                  <h3 className="text-2xl font-bold">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
                  <div className="space-y-3">
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        1
                      </div>
                      <p className="text-lg">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Å–∞–π—Ç–µ</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        2
                      </div>
                      <p className="text-lg">–û—Ñ–æ—Ä–º–∏ –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        3
                      </div>
                      <p className="text-lg">–ê–∫—Ç–∏–≤–∏—Ä—É–π –∫–∞—Ä—Ç—É –∏ —Å–æ–≤–µ—Ä—à–∏ –ø–æ–∫—É–ø–∫—É –æ—Ç 200‚ÇΩ</p>
                    </div>
                    <div className="flex items-start gap-3">
                      <div className="w-8 h-8 rounded-full bg-secondary text-secondary-foreground flex items-center justify-center font-bold flex-shrink-0">
                        4
                      </div>
                      <p className="text-lg">–ü–æ–ª—É—á–∏ –¥–æ 1000‚ÇΩ –Ω–∞ –±–∞–ª–∞–Ω—Å!</p>
                    </div>
                  </div>
                </div>

                <div className="bg-secondary/20 backdrop-blur-sm rounded-lg p-6">
                  <div className="flex items-center gap-3 mb-3">
                    <Icon name="Users" size={32} className="text-secondary" />
                    <h3 className="text-2xl font-bold">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h3>
                  </div>
                  <p className="text-lg mb-2">
                    –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π <span className="font-bold text-secondary">200‚ÇΩ</span> –∑–∞ –∫–∞–∂–¥–æ–≥–æ, –∫—Ç–æ –≤—ã–ø–æ–ª–Ω–∏—Ç –≤—Å–µ —É—Å–ª–æ–≤–∏—è!
                  </p>
                  <p className="text-white/80">
                    –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏—à—å, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å!
                  </p>
                </div>
              </CardContent>
            </Card>

            <div className="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in">
              <Button
                size="lg"
                className="text-lg font-semibold h-14 shadow-lg hover:shadow-xl transition-all"
                onClick={() => setView('register')}
              >
                <Icon name="UserPlus" size={24} className="mr-2" />
                –ù–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="text-lg font-semibold h-14 shadow-lg hover:shadow-xl transition-all border-2 border-primary"
                onClick={() => setView('login')}
              >
                <Icon name="LogIn" size={24} className="mr-2" />
                –í–æ–π—Ç–∏
              </Button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (view === 'register') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-2xl animate-fade-in">
          <CardHeader>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setView('home')}
              className="w-fit mb-4"
            >
              <Icon name="ArrowLeft" size={20} className="mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            <CardTitle className="text-3xl flex items-center gap-2">
              <Icon name="UserPlus" size={32} className="text-primary" />
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </CardTitle>
            <CardDescription>–°–æ–∑–¥–∞–π –∞–∫–∫–∞—É–Ω—Ç –∏ –Ω–∞—á–Ω–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å</CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleRegister} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="full_name">–ü–æ–ª–Ω–æ–µ –∏–º—è</Label>
                <Input
                  id="full_name"
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  value={registerForm.full_name}
                  onChange={(e) => setRegisterForm({ ...registerForm, full_name: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="ivan@example.com"
                  value={registerForm.email}
                  onChange={(e) => setRegisterForm({ ...registerForm, email: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="password"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  value={registerForm.password}
                  onChange={(e) => setRegisterForm({ ...registerForm, password: e.target.value })}
                  required
                />
              </div>
              <Button type="submit" className="w-full" disabled={loading}>
                {loading ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
              </Button>
            </form>
            <Separator className="my-4" />
            <p className="text-center text-sm text-muted-foreground">
              –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
              <button
                onClick={() => setView('login')}
                className="text-primary hover:underline font-semibold"
              >
                –í–æ–π—Ç–∏
              </button>
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (view === 'login') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-2xl animate-fade-in">
          <CardHeader>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setView('home')}
              className="w-fit mb-4"
            >
              <Icon name="ArrowLeft" size={20} className="mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            <CardTitle className="text-3xl flex items-center gap-2">
              <Icon name="LogIn" size={32} className="text-primary" />
              –í—Ö–æ–¥
            </CardTitle>
            <CardDescription>–í–æ–π–¥–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleLogin} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="login-email">Email</Label>
                <Input
                  id="login-email"
                  type="email"
                  placeholder="ivan@example.com"
                  value={loginForm.email}
                  onChange={(e) => setLoginForm({ ...loginForm, email: e.target.value })}
                  required
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="login-password">–ü–∞—Ä–æ–ª—å</Label>
                <Input
                  id="login-password"
                  type="password"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  value={loginForm.password}
                  onChange={(e) => setLoginForm({ ...loginForm, password: e.target.value })}
                  required
                />
              </div>
              <Button type="submit" className="w-full" disabled={loading}>
                {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
              </Button>
            </form>
            <Separator className="my-4" />
            <p className="text-center text-sm text-muted-foreground">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
              <button
                onClick={() => setView('register')}
                className="text-primary hover:underline font-semibold"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </p>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (view === 'dashboard' && user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-yellow-50">
        <div className="container mx-auto px-4 py-8">
          <header className="flex justify-between items-center mb-8 animate-fade-in">
            <div>
              <h1 className="text-4xl font-bold text-primary mb-1">
                –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
              </h1>
              <p className="text-muted-foreground">
                –ü—Ä–∏–≤–µ—Ç, {user.full_name}!
              </p>
            </div>
            <Button variant="outline" onClick={handleLogout}>
              <Icon name="LogOut" size={20} className="mr-2" />
              –í—ã–π—Ç–∏
            </Button>
          </header>

          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <Card className="bg-gradient-to-br from-primary to-red-700 text-white border-0 shadow-xl animate-slide-up">
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="Wallet" size={28} />
                  –ë–∞–ª–∞–Ω—Å
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-5xl font-bold">{user.balance.toFixed(2)} ‚ÇΩ</p>
                <p className="text-white/80 mt-2">–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞</p>
                <Dialog>
                  <DialogTrigger asChild>
                    <Button
                      variant="secondary"
                      className="mt-4 w-full"
                      disabled={user.balance < 100}
                    >
                      <Icon name="ArrowUpCircle" size={20} className="mr-2" />
                      –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏
                    </Button>
                  </DialogTrigger>
                  <DialogContent>
                    <DialogHeader>
                      <DialogTitle>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</DialogTitle>
                      <DialogDescription>
                        –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 100‚ÇΩ
                      </DialogDescription>
                    </DialogHeader>
                    <div className="space-y-4">
                      <div className="space-y-2">
                        <Label>–°—É–º–º–∞ –≤—ã–≤–æ–¥–∞</Label>
                        <Input
                          type="number"
                          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
                          value={withdrawAmount}
                          onChange={(e) => setWithdrawAmount(e.target.value)}
                        />
                        <p className="text-sm text-muted-foreground">
                          –î–æ—Å—Ç—É–ø–Ω–æ: {user.balance.toFixed(2)} ‚ÇΩ
                        </p>
                      </div>
                      <div className="space-y-2">
                        <Label>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –∏–ª–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</Label>
                        <Input
                          placeholder="1234 5678 9012 3456"
                          value={paymentDetails}
                          onChange={(e) => setPaymentDetails(e.target.value)}
                        />
                      </div>
                      <Button
                        onClick={handleWithdraw}
                        disabled={loading}
                        className="w-full"
                      >
                        {loading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : '–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'}
                      </Button>
                      <p className="text-xs text-muted-foreground">
                        –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤
                      </p>
                    </div>
                  </DialogContent>
                </Dialog>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-secondary to-yellow-600 text-white border-0 shadow-xl animate-slide-up" style={{ animationDelay: '0.1s' }}>
              <CardHeader>
                <CardTitle className="text-2xl flex items-center gap-2">
                  <Icon name="Users" size={28} />
                  –†–µ—Ñ–µ—Ä–∞–ª—ã
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-5xl font-bold">{user.referral_count}</p>
                <p className="text-white/80 mt-2">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π</p>
                <p className="text-white/90 mt-4">
                  –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞: <span className="font-bold text-2xl">200‚ÇΩ</span>
                </p>
              </CardContent>
            </Card>
          </div>

          <Card className="mb-8 animate-fade-in">
            <CardHeader>
              <CardTitle className="text-2xl flex items-center gap-2">
                <Icon name="CreditCard" size={28} className="text-primary" />
                –û—Ñ–æ—Ä–º–∏—Ç—å –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É
              </CardTitle>
              <CardDescription>
                –ü–æ–ª—É—á–∏ –¥–æ 1000‚ÇΩ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã!
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="bg-gradient-to-r from-primary/10 to-secondary/10 p-6 rounded-lg border-2 border-primary/20">
                <h3 className="text-xl font-bold mb-3">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
                <ol className="space-y-2 list-decimal list-inside">
                  <li className="text-lg">–û—Ñ–æ—Ä–º–∏ –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ</li>
                  <li className="text-lg">–ê–∫—Ç–∏–≤–∏—Ä—É–π –∫–∞—Ä—Ç—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</li>
                  <li className="text-lg">–°–æ–≤–µ—Ä—à–∏ –ø–æ–∫—É–ø–∫—É –æ—Ç 200‚ÇΩ</li>
                  <li className="text-lg">–ü–æ–ª—É—á–∏ –¥–æ 1000‚ÇΩ –Ω–∞ –±–∞–ª–∞–Ω—Å!</li>
                </ol>
              </div>
              <Button asChild size="lg" className="w-full">
                <a
                  href="https://alfa.me/ASQWHN"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon name="ExternalLink" size={20} className="mr-2" />
                  –û—Ñ–æ—Ä–º–∏—Ç—å –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—É
                </a>
              </Button>
            </CardContent>
          </Card>

          <Card className="mb-8 animate-fade-in">
            <CardHeader>
              <CardTitle className="text-2xl flex items-center gap-2">
                <Icon name="Share2" size={28} className="text-primary" />
                –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
              </CardTitle>
              <CardDescription>
                –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π 200‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ!
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="bg-muted p-4 rounded-lg">
                <Label className="text-sm">–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</Label>
                <div className="flex gap-2 mt-2">
                  <Input
                    value={`${window.location.origin}?ref=${user.referral_code}`}
                    readOnly
                    className="font-mono text-sm"
                  />
                  <Button onClick={copyReferralLink}>
                    <Icon name="Copy" size={20} />
                  </Button>
                </div>
              </div>
              <div className="bg-secondary/10 p-6 rounded-lg border-2 border-secondary/20">
                <h3 className="text-xl font-bold mb-3 flex items-center gap-2">
                  <Icon name="Gift" size={24} className="text-secondary" />
                  –£—Å–ª–æ–≤–∏—è –¥–ª—è –¥—Ä—É–∑–µ–π:
                </h3>
                <ul className="space-y-2">
                  <li className="flex items-start gap-2">
                    <Icon name="Check" size={20} className="text-secondary flex-shrink-0 mt-1" />
                    <span>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <Icon name="Check" size={20} className="text-secondary flex-shrink-0 mt-1" />
                    <span>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ê–ª—å—Ñ–∞-–ö–∞—Ä—Ç—ã</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <Icon name="Check" size={20} className="text-secondary flex-shrink-0 mt-1" />
                    <span>–ü–æ–∫—É–ø–∫–∞ –æ—Ç 200‚ÇΩ</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <Icon name="ArrowRight" size={20} className="text-primary flex-shrink-0 mt-1" />
                    <span className="font-bold text-primary">–¢—ã –ø–æ–ª—É—á–∞–µ—à—å 200‚ÇΩ!</span>
                  </li>
                </ul>
              </div>
            </CardContent>
          </Card>

          <Card className="animate-fade-in">
            <CardHeader>
              <CardTitle className="text-2xl flex items-center gap-2">
                <Icon name="MessageCircle" size={28} className="text-primary" />
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-lg mb-4">
                –í–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏ –≤ Telegram:
              </p>
              <Button asChild size="lg">
                <a
                  href="https://t.me/Alfa_Bank778"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <Icon name="Send" size={20} className="mr-2" />
                  @Alfa_Bank778
                </a>
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return null;
}
